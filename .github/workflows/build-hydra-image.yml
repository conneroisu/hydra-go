name: Build and Push Hydra Test Image

on:
  push:
    branches: [main, dev]
    paths:
      - 'docker/**'
      - '.github/workflows/build-hydra-image.yml'
  pull_request:
    paths:
      - 'docker/**'
      - '.github/workflows/build-hydra-image.yml'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/hydra-test

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix=sha-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: ./docker
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

      - name: Test image (if PR)
        if: github.event_name == 'pull_request'
        run: |
          # Load the built image for testing
          docker buildx build --load --tag test-image ./docker
          
          # Start the container and wait for health check
          docker run -d --name hydra-test -p 3000:3000 -p 8080:8080 test-image
          
          # Wait for container to be healthy
          timeout=60
          while [ $timeout -gt 0 ]; do
            if curl -f http://localhost:8080/health >/dev/null 2>&1; then
              echo "✅ Hydra container is healthy"
              break
            fi
            sleep 2
            timeout=$((timeout-2))
          done
          
          if [ $timeout -le 0 ]; then
            echo "❌ Container health check failed"
            docker logs hydra-test
            exit 1
          fi
          
          # Test Hydra API endpoint
          if curl -f http://localhost:3000/ >/dev/null 2>&1; then
            echo "✅ Hydra API is accessible"
          else
            echo "❌ Hydra API is not accessible"
            docker logs hydra-test
            exit 1
          fi
          
          # Cleanup
          docker stop hydra-test
          docker rm hydra-test

      - name: Generate artifact attestation
        if: github.event_name != 'pull_request'
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: true